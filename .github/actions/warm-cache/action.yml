# ------------------------------------------------------------------------------------
#  Warm Cache Composite Action (GoFortress)
#
#  Purpose: Warm Go module and build caches for efficient CI/CD execution.
#  This action handles cache restoration, warming, and saving for Go projects.
#
#  Maintainer: @mrz1836
#
# ------------------------------------------------------------------------------------

name: "Warm Go Caches"
description: "Warm Go module and build caches for the specified Go version and OS"

inputs:
  go-version:
    description: "Go version to use"
    required: true
  matrix-os:
    description: "Operating system for the runner"
    required: true
  matrix-name:
    description: "Display name for the matrix configuration"
    required: true
  enable-verbose:
    description: "Enable verbose output"
    required: false
    default: "false"
  go-primary-version:
    description: "Primary Go version for comparison"
    required: true
  go-secondary-version:
    description: "Secondary Go version for comparison"
    required: true
  env-json:
    description: "JSON string of environment variables"
    required: true

runs:
  using: "composite"
  steps:
    # ————————————————————————————————————————————————————————————————
    # Parse environment variables
    # ————————————————————————————————————————————————————————————————
    - name: 🔧 Parse environment variables
      shell: bash
      env:
        ENV_JSON: ${{ inputs.env-json }}
      run: |
        echo "📋 Setting environment variables..."
        echo "$ENV_JSON" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' | while IFS='=' read -r key value; do
          echo "$key=$value" >> $GITHUB_ENV
        done

    # ————————————————————————————————————————————————————————————————
    # Checkout code to access local actions (setup-go-with-cache, setup-magex)
    # ————————————————————————————————————————————————————————————————
    - name: 📥 Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    # ————————————————————————————————————————————————————————————————
    # Set environment variables
    # ————————————————————————————————————————————————————————————————
    - name: ⚙️ Set cache paths
      id: set-cache-env
      shell: bash
      run: |
        echo "🔧 Setting up cache environment variables..."
        echo "GOCACHE=$HOME/.cache/go-build" >> $GITHUB_ENV
        echo "GOMODCACHE=$HOME/go/pkg/mod" >> $GITHUB_ENV
        echo "GOLANGCI_LINT_CACHE=$HOME/.cache/golangci-lint" >> $GITHUB_ENV
        echo "✅ Cache Environment variables set successfully"

    # ────────────────────────────────────────────────────────────────────────────
    # Setup Go with caching and version management
    # ────────────────────────────────────────────────────────────────────────────
    - name: 🏗️ Setup Go with Cache
      id: setup-go
      uses: ./.github/actions/setup-go-with-cache
      with:
        go-version: ${{ inputs.go-version }}
        matrix-os: ${{ inputs.matrix-os }}
        go-primary-version: ${{ inputs.go-primary-version }}
        go-secondary-version: ${{ inputs.go-secondary-version }}

    # ────────────────────────────────────────────────────────────────────────────
    # Setup MAGE-X (required for magex commands in cache warming)
    # ────────────────────────────────────────────────────────────────────────────
    - name: 🔧 Setup MAGE-X
      uses: ./.github/actions/setup-magex
      with:
        magex-version: ${{ env.MAGE_X_VERSION }}
        runner-os: ${{ inputs.matrix-os }}

    # ————————————————————————————————————————————————————————————————
    # Ensure go.sum exists and download modules
    # ————————————————————————————————————————————————————————————————
    - name: 📋 Ensure go.sum exists
      shell: bash
      run: |
        echo "🔍 Checking for go.sum file..."
        if [ ! -f go.sum ]; then
          echo "⚠️ go.sum not found, running 'magex tidy' to generate it."
          magex tidy
          echo "✅ go.sum generated successfully"
        else
          echo "✅ go.sum already exists"
        fi

    # ────────────────────────────────────────────────────────────────────────────
    # Ensure cache directories exist
    # ────────────────────────────────────────────────────────────────────────────
    - name: 📁 Ensure cache directories exist
      shell: bash
      run: |
        echo "📁 Ensuring cache directories exist..."
        mkdir -p "$GOMODCACHE"
        mkdir -p "$GOCACHE"
        mkdir -p "$GOCACHE/test"
        echo "✅ Cache directories created successfully"

    # ────────────────────────────────────────────────────────────────────────────
    # Download modules when module cache missed
    # ────────────────────────────────────────────────────────────────────────────
    - name: ⬇️ Download modules (module cache miss)
      if: steps.setup-go.outputs.module-cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail
        echo "⬇️ Module cache miss - downloading modules..."
        magex deps:download
        echo "✅ Modules downloaded successfully"

    # ────────────────────────────────────────────────────────────────────────────
    # Warm build cache when build cache missed
    # ────────────────────────────────────────────────────────────────────────────
    - name: 🏗️ Warm build cache (build cache miss)
      if: steps.setup-go.outputs.build-cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail
        echo "🔧 Build cache miss - pre-building packages..."
        magex build:prebuild

        echo "🏗️ Building stdlib for host platform…"
        magex install:stdlib

        echo "✅ Build cache warmed for Go ${{ inputs.go-version }}"

    # ────────────────────────────────────────────────────────────────────────────
    # Save the build cache we just created
    # ────────────────────────────────────────────────────────────────────────────
    - name: 💾 Save Go build cache
      if: steps.setup-go.outputs.build-cache-hit != 'true'
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.0.2
      with:
        path: |
          ~/.cache/go-build
          ~/.cache/go-build/test
        key: ${{ inputs.matrix-os }}-gobuild-${{ inputs.go-version }}-${{ hashFiles('**/go.sum') }}

    # ────────────────────────────────────────────────────────────────────────────
    # Save the Go module cache we just populated
    # ────────────────────────────────────────────────────────────────────────────
    - name: 💾 Save Go module cache
      if: steps.setup-go.outputs.module-cache-hit != 'true'
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.0.2
      with:
        path: ~/go/pkg/mod
        key: ${{ inputs.matrix-os }}-gomod-${{ hashFiles('**/go.sum') }}

    # ————————————————————————————————————————————————————————————————
    # Track cache performance (no outputs - use artifacts instead)
    # ————————————————————————————————————————————————————————————————
    - name: 📊 Calculate cache statistics
      id: cache-summary
      if: always()
      shell: bash
      run: |
        STATS_FILE="cache-stats-${{ inputs.matrix-os }}-${{ inputs.go-version }}.json"

        cat > "$STATS_FILE" << EOF
        {
          "os": "${{ inputs.matrix-os }}",
          "go_version": "${{ inputs.go-version }}",
          "gomod_cache_hit": ${{ steps.setup-go.outputs.module-cache-hit == 'true' && 'true' || 'false' }},
          "gobuild_cache_hit": ${{ steps.setup-go.outputs.build-cache-hit == 'true' && 'true' || 'false' }},
          "cache_size_gomod": "$(du -sh $GOMODCACHE 2>/dev/null | cut -f1 || echo '0')",
          "cache_size_gobuild": "$(du -sh $GOCACHE 2>/dev/null | cut -f1 || echo '0')",
          "workflow": "cache-warm",
          "job_name": "warm-cache",
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        }
        EOF

        echo "📊 Cache statistics:"
        jq . "$STATS_FILE"

    # ————————————————————————————————————————————————————————————————
    # Upload cache statistics
    # ————————————————————————————————————————————————————————————————
    - name: 📤 Upload cache statistics
      if: always()
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: cache-stats-${{ inputs.matrix-os }}-${{ inputs.go-version }}
        path: cache-stats-*.json
        retention-days: 1
